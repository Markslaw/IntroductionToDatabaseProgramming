//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelReservation_SYS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelResEntities : DbContext
    {
        public HotelResEntities()
            : base("name=HotelResEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ADMIN> ADMINS { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERS { get; set; }
        public virtual DbSet<RESERVATION> RESERVATIONS { get; set; }
        public virtual DbSet<ROOMRATE> ROOMRATES { get; set; }
        public virtual DbSet<ROOM> ROOMS { get; set; }
        public virtual DbSet<ALL_CHECK_INS_TODAY> ALL_CHECK_INS_TODAY { get; set; }
        public virtual DbSet<AQ__DEF__AQCALL_F> AQ__DEF__AQCALL_F { get; set; }
        public virtual DbSet<AQ__DEF__AQERROR_F> AQ__DEF__AQERROR_F { get; set; }
        public virtual DbSet<AQ_DEF__AQCALL> AQ_DEF__AQCALL { get; set; }
        public virtual DbSet<AQ_DEF__AQERROR> AQ_DEF__AQERROR { get; set; }
        public virtual DbSet<CHECK_DELETE_VALID_RES> CHECK_DELETE_VALID_RES { get; set; }
        public virtual DbSet<CHECK_OUT_VIEW> CHECK_OUT_VIEW { get; set; }
        public virtual DbSet<DELETERESERVATION_VIEW> DELETERESERVATION_VIEW { get; set; }
        public virtual DbSet<GET_ALL_DETAILS_FOR_CANCEL> GET_ALL_DETAILS_FOR_CANCEL { get; set; }
        public virtual DbSet<GET_CUST_NAME_FOR_CANCEL> GET_CUST_NAME_FOR_CANCEL { get; set; }
        public virtual DbSet<MVIEW_EVALUATIONS> MVIEW_EVALUATIONS { get; set; }
        public virtual DbSet<MVIEW_FILTER> MVIEW_FILTER { get; set; }
        public virtual DbSet<MVIEW_FILTERINSTANCE> MVIEW_FILTERINSTANCE { get; set; }
        public virtual DbSet<MVIEW_LOG> MVIEW_LOG { get; set; }
        public virtual DbSet<MVIEW_RECOMMENDATIONS> MVIEW_RECOMMENDATIONS { get; set; }
        public virtual DbSet<MVIEW_WORKLOAD> MVIEW_WORKLOAD { get; set; }
        public virtual DbSet<PRODUCT_PRIVS> PRODUCT_PRIVS { get; set; }
        public virtual DbSet<ROOMS_NOT_CURRENTLY_IN_USE> ROOMS_NOT_CURRENTLY_IN_USE { get; set; }
    
        public virtual int ADD_ROOM(Nullable<decimal> r_ROOM_NO, string r_ROOM_TYPE, string r_STATUS)
        {
            var r_ROOM_NOParameter = r_ROOM_NO.HasValue ?
                new ObjectParameter("R_ROOM_NO", r_ROOM_NO) :
                new ObjectParameter("R_ROOM_NO", typeof(decimal));
    
            var r_ROOM_TYPEParameter = r_ROOM_TYPE != null ?
                new ObjectParameter("R_ROOM_TYPE", r_ROOM_TYPE) :
                new ObjectParameter("R_ROOM_TYPE", typeof(string));
    
            var r_STATUSParameter = r_STATUS != null ?
                new ObjectParameter("R_STATUS", r_STATUS) :
                new ObjectParameter("R_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_ROOM", r_ROOM_NOParameter, r_ROOM_TYPEParameter, r_STATUSParameter);
        }
    
        public virtual int ADD_ROOM_RATE(string r_ROOM_TYPE, string r_DESCRIPTION, Nullable<decimal> r_RATE)
        {
            var r_ROOM_TYPEParameter = r_ROOM_TYPE != null ?
                new ObjectParameter("R_ROOM_TYPE", r_ROOM_TYPE) :
                new ObjectParameter("R_ROOM_TYPE", typeof(string));
    
            var r_DESCRIPTIONParameter = r_DESCRIPTION != null ?
                new ObjectParameter("R_DESCRIPTION", r_DESCRIPTION) :
                new ObjectParameter("R_DESCRIPTION", typeof(string));
    
            var r_RATEParameter = r_RATE.HasValue ?
                new ObjectParameter("R_RATE", r_RATE) :
                new ObjectParameter("R_RATE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_ROOM_RATE", r_ROOM_TYPEParameter, r_DESCRIPTIONParameter, r_RATEParameter);
        }
    
        public virtual int ADMIN_LOGIN_CHECK(string gET_ENTERED_USERNAME, string gET_ENTERED_PASSWORD, ObjectParameter gET_EXISTING_USERNAME, ObjectParameter gET_EXISTING_PASSWORD, ObjectParameter gET_FAILED_ATTEMPTS, ObjectParameter gET_BLOCKTIME)
        {
            var gET_ENTERED_USERNAMEParameter = gET_ENTERED_USERNAME != null ?
                new ObjectParameter("GET_ENTERED_USERNAME", gET_ENTERED_USERNAME) :
                new ObjectParameter("GET_ENTERED_USERNAME", typeof(string));
    
            var gET_ENTERED_PASSWORDParameter = gET_ENTERED_PASSWORD != null ?
                new ObjectParameter("GET_ENTERED_PASSWORD", gET_ENTERED_PASSWORD) :
                new ObjectParameter("GET_ENTERED_PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMIN_LOGIN_CHECK", gET_ENTERED_USERNAMEParameter, gET_ENTERED_PASSWORDParameter, gET_EXISTING_USERNAME, gET_EXISTING_PASSWORD, gET_FAILED_ATTEMPTS, gET_BLOCKTIME);
        }
    
        public virtual int CANCEL_RESERVATION(ObjectParameter r_OUTPUT_RES_ID, Nullable<decimal> r_INPUT_RES_ID, ObjectParameter r_DATE_DEPART, ObjectParameter r_DATE_ARRIVE, ObjectParameter c_SURNAME, ObjectParameter c_FORENAME, ObjectParameter c_EMAIL)
        {
            var r_INPUT_RES_IDParameter = r_INPUT_RES_ID.HasValue ?
                new ObjectParameter("R_INPUT_RES_ID", r_INPUT_RES_ID) :
                new ObjectParameter("R_INPUT_RES_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CANCEL_RESERVATION", r_OUTPUT_RES_ID, r_INPUT_RES_IDParameter, r_DATE_DEPART, r_DATE_ARRIVE, c_SURNAME, c_FORENAME, c_EMAIL);
        }
    
        public virtual int CHECK_IN(Nullable<decimal> rE_RES_ID, string rE_CHECK_IN, ObjectParameter r_RES_ID, ObjectParameter c_FORENAME, ObjectParameter c_SURNAME, ObjectParameter r_DATE_ARRIVE, ObjectParameter r_DATE_DEPART)
        {
            var rE_RES_IDParameter = rE_RES_ID.HasValue ?
                new ObjectParameter("RE_RES_ID", rE_RES_ID) :
                new ObjectParameter("RE_RES_ID", typeof(decimal));
    
            var rE_CHECK_INParameter = rE_CHECK_IN != null ?
                new ObjectParameter("RE_CHECK_IN", rE_CHECK_IN) :
                new ObjectParameter("RE_CHECK_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHECK_IN", rE_RES_IDParameter, rE_CHECK_INParameter, r_RES_ID, c_FORENAME, c_SURNAME, r_DATE_ARRIVE, r_DATE_DEPART);
        }
    
        public virtual int CHECK_OUT(Nullable<decimal> rE_RES_ID, ObjectParameter r_RES_ID, ObjectParameter c_FORENAME, ObjectParameter c_SURNAME, ObjectParameter r_DATE_ARRIVE, ObjectParameter r_DATE_DEPART)
        {
            var rE_RES_IDParameter = rE_RES_ID.HasValue ?
                new ObjectParameter("RE_RES_ID", rE_RES_ID) :
                new ObjectParameter("RE_RES_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHECK_OUT", rE_RES_IDParameter, r_RES_ID, c_FORENAME, c_SURNAME, r_DATE_ARRIVE, r_DATE_DEPART);
        }
    }
}
